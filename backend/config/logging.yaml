version: 1
disable_existing_loggers: false

formatters:
  default:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  detailed:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(module)s:%(funcName)s:%(lineno)d - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  json:
    class: utils.logging.JSONFormatter

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: default
    stream: ext://sys.stdout
  
  file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/inventorysync.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
  
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/errors.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
  
  json_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/inventorysync.json
    maxBytes: 10485760  # 10MB
    backupCount: 5

loggers:
  inventorysync:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false
  
  sqlalchemy.engine:
    level: WARNING
    handlers: [console, file]
    propagate: false
  
  uvicorn:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  fastapi:
    level: INFO
    handlers: [console, file]
    propagate: false

root:
  level: INFO
  handlers: [console, file, error_file]

# Environment-specific configurations
development:
  level: DEBUG
  handlers: [console, file, error_file]
  formatters:
    console: default
    file: detailed

production:
  level: INFO
  handlers: [console, json_file, error_file]
  formatters:
    console: default
    json: json
  security:
    log_sensitive_data: false
    mask_patterns:
      - "password"
      - "secret"
      - "token"
      - "key"

testing:
  level: WARNING
  handlers: [console]
  disable_external_loggers: true